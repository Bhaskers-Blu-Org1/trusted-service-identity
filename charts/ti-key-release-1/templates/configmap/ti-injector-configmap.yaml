{{ define "ti-injector-configmap.yaml.tpl" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: ti-injector-webhook-configmap
data:
  initcontainerconfig.yaml: |
      initContainers:
      - name: gen-vault-cert
        image: res-kompass-kompass-docker-local.artifactory.swg-devops.com/ti-gen-vault-cert:v0.3
        imagePullPolicy: Always
        imagePullSecrets:
        - name: regcred
        volumeMounts:
          - name: pod-metadata
            mountPath: /pod-metadata
            readOnly: true
          - name: ti-sa-mount
            mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            readOnly: true
          - name: ti-vault-secret
            mountPath: /certs
          - name: ti-keys
            mountPath: /keys
            readOnly: true
          - name: ti-skeys
            mountPath: /skeys
            readOnly: true
          - name: host-etc
            mountPath: /host/etc
            readOnly: true
          - name: ti-sidecar
            mountPath: /sidecar
      sidecarContainers:
      - name: jwt-sidecar
        image: res-kompass-kompass-docker-local.artifactory.swg-devops.com/ti-jwt-sidecar:v0.3
        imagePullPolicy: Always
        imagePullSecrets:
        - name: regcred
        volumeMounts:
          - name: jwt-shared-data
            mountPath: /usr/share/jwt
          - name: jwt-configmap
            mountPath: "/configmap/jwt"
            readOnly: true
          - name: jwt-secret
            mountPath: "/secret/jwt"
            readOnly: true
          - name: ti-sidecar
            mountPath: "/initContainers"
            readOnly: true
        command: ["/bin/sh", "-c", "/configmap/jwt/execute-get-key.sh"]
      volumes:
        - name: jwt-shared-data
          emptyDir: {}
        - name: ti-sidecar
          emptyDir: {}
        - name: jwt-configmap
          configMap:
            name: ti-jwt-configmap
            # this makes the files executable
            defaultMode: 0744
        - name: ti-host-volume
          hostPath:
            # directory location on host
             path: /ti
             # directory must exist
             type: Directory
        - name: host-etc
          hostPath:
            # directory location on host
             path: /etc
             type: Directory
        - name: jwt-secret
          hostPath:
            # directory location on host
             path: /ti/secrets/jwt
             type: Directory
        # - name: jwt-secret # TO-DELETE
        #   secret:
        #     secretName: jwt-secret
        - name: pod-metadata
          downwardAPI:
            items:
              - path: "ti-secret"
                fieldRef:
                  fieldPath: metadata.annotations['admission.trusted.identity/ti-secret-key']
              - path: "ti-identity"
                fieldRef:
                  fieldPath: metadata.annotations['admission.trusted.identity/ti-identity']
              - path: "ti-pod-name"
                fieldRef:
                  fieldPath: metadata.name
              - path: "ti-images"
                fieldRef:
                  fieldPath: metadata.annotations['admission.trusted.identity/ti-images']
        - name: ti-vault-secret
          emptyDir: {}
        - name: ti-keys
          hostPath:
            # directory location on host
             path: /ti/secrets/keys
             type: Directory
        - name: ti-skeys
          secret:
            secretName: ti-keys-config
        - name: ti-sa-mount
          secret:
            secretName: ${TI_SA_TOKEN}
      addVolumeMounts:
        - name: ti-vault-secret
          mountPath: /vault-certs
          readOnly: true
        - name: jwt-shared-data
          mountPath: /jwt-tokens
          readOnly: true
{{ end }}
